-- This file is part of the KOW Framework project.
-- 
-- It is provided as-is and has no specific license... do with it whatever you want. :D
-- But follow the include libs licenses plz :D



--------------
-- Ada 2005 --
--------------
with Ada.Directories;
with Ada.Exceptions;
with Ada.Text_IO;					use Ada.Text_IO;


-------------------
-- KOW Framework --
-------------------
with APQ_Provider;
with APQ_Provider.MySQL;
pragma Elaborate( APQ_Provider.MySQL );


with KOW_Config;
with KOW_Ent;
with KOW_Lib.Log;
with KOW_Sec;
with KOW_Sec.Entities;
pragma Elaborate( KOW_Sec.Entities );
with KOW_Sec.Authorization_Criterias;
pragma Elaborate( KOW_Sec.Authorization_Criterias);




@@TABLE@@
with @_entities_@.Entities_Setup;
@@END_TABLE@@



@@TABLE@@
with @_applications_@.Load;
@@END_TABLE@@



@@TABLE@@
with @_application_tasks_@.Spawn_Tasks;
@@END_TABLE@@




procedure @_project_name_@_Setup(spawn_tasks : in boolean := false ) is
	Manager: KOW_Sec.Authentication_Manager_Access := new KOW_Sec.Entities.Authentication_Manager_Type;
begin

	---------------------
	-- KOW_Config Setup --
	---------------------
	
	KOW_Config.Set_Project_Name( "@_upper_project_name_@" );
	KOW_COnfig.Add_Config_Path( "./data" );


	-----------------------
	-- KOW_Lib.Log Setup --
	-----------------------

	declare
		use KOW_Config;
		Log_Config : Config_File;



		procedure Set_File_Output(
				Log_File	: in out KOW_Lib.Log.Log_File_Type;
				Key		: in     String
			) is

			Filename : String := Value( Log_Config, Key, "" );
		begin
			if Filename /= "" then
				Log_File := new File_Type;
				
				if Ada.Directories.Exists( Filename ) then
					Open(
							Log_File.all,
							Append_File,
							Filename
						);
				else
					Create(
							Log_File.all,
							Append_File,
							Filename
						);
				end if;
			end if;
		end Set_File_Output;
					
	begin
		Log_Config := New_Config_File( "kow_lib-log" );

		KOW_Lib.Log.Default_Level := KOW_Lib.Log.Log_Level'Value(
					"level_" & Value( Log_Config, "log_level", "warning" )
				);

		Set_File_Output(
				KOW_Lib.Log.Error_Output,
				"error_output" 
			);

		Set_File_Output(
				KOW_Lib.Log.Info_Output,
				"info_output"
			);
	exception
		when KOW_CONFIG.FILE_NOT_FOUND => null;
	end;
						
	--------------------------
	-- APQ and KOW_Ent Setup --
	--------------------------

	KOW_Ent.Setup;


	-- now we get the labels :D
	KOW_Ent.Labels.Reload_Registry;


	------------------
	-- KOW_Sec Setup --
	------------------

	-- Register the manager:
	KOW_Sec.Register_Manager( Manager );



	-------------------
	-- KOW_View Setup --
	-------------------


	@@TABLE@@
	@_entities_@.Entities_Setup;
	@@END_TABLE@@

	@@TABLE@@
	@_applications_@.Load;
	@@END_TABLE@@


	if Spawn_Tasks then
		null;
		@@TABLE@@
		@_application_tasks_@.Spawn_Tasks;
		@@END_TABLE@@
	end if;

exception
	when E : Others =>
		Ada.Text_IO.Put_Line( "=======================================" );
		Ada.Text_IO.Put_Line( "=======================================" );
		Ada.Text_IO.Put_Line( "=======================================" );
		Ada.Text_IO.Put_Line( Ada.Exceptions.Exception_Information( E ) );
		Ada.Text_IO.Put_Line( "=======================================" );
		Ada.Text_IO.Put_Line( "=======================================" );
		Ada.Text_IO.Put_Line( "=======================================" );
end @_project_name_@_Setup;
